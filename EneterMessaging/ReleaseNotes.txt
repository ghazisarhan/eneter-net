Release Notes

Version 7.0

Release Date: 2016-01-02

Supported Platforms:

    Java 6 and Android 2.3.3 (or later)
    .Net 3.5, 4.0, 4.5, Silverlight 3, 4, 5, Windows Phone 7, 7.1, 8.0, 8.1 Mono 2.6.4, Compact Framework 2.0, 3.5
    HTML 5 (Javascript)

New Features:

    Eneter for Javascript supports Authenticated Messaging.
    Eneter for Javascript supports connecting sertvices via Message Bus.
    Eneter for Javascript supports MultiTypedMessages.
    Multicast and broadcast UDP messaging supported.
    Possibility to set port number for receiving response messages when using UDP, TCP or WebSocket.
    Possibility to get the list IP addresses assigned to the computer which can be used for listening.
    Possibility to check whether a port is available for listening.
    MessageBus API extended to control connecting and disconnecting of services.
    Broker API extended to control control publishing and subscribing of messages.

Changes in behavior:

    Eneter for Android is available for Android 2.3.3 (or later) instead of Android 2.1 (or later).

Fixed bugs:
    0000025 - A thread blocks shutdown of application in Java
    0000029 - IDuplexBroker.sendMessage() threads stuck forever
    0000030 - RsaSerializer in Android is not compatible with RsaSerializer in .NET



Version 6.5

Release Date: 2015-05-03

Supported Platforms:

    Java 6 and Android 2.1 (or later)
    .Net 3.5, 4.0, 4.5, Silverlight 3, 4, 5, Windows Phone 7, 7.1, 8.0, 8.1 Mono 2.6.4, Compact Framework 2.0, 3.5
    HTML 5 (Javascript)

New Features:

    Windows Phone 8.0 and 8.1 (Silverlight) supported.
    Sending broadcast messages from service to all connected clients.
    Possibility to communicate with Eneter even if some communicating parts do not have Eneter.
    Sending/receiving multiple types of messages by one sender/receiver.


Changes in behavior:

    Reliable Typed Messages are discontinued - sending of confirmation messages can be better handled from the user code based on particular needs.
    Connection timeout and sending timeout added to the shared memory messaging.
    Broker has significantly improved the performance (by using new custom serializer).
    Message Bus has significantly improved performance (by using new custom serializer).
    RPC (Remote Procedure Call) error handling improved - new RpcException introduces which contains exception details from the service.

Fixed bugs:
    0000024 - output channel resolves host names.
    0000023 - Not possibility to set timeouts for SharedMemory protocol.



Version 6.0

Release Date: 2014-03-16

Supported Platforms:

    Java 6 and Android 2.1 (or later)
    .Net 3.5, .Net 4.0, .Net 4.5, Silverlight 3, Silverlight 4, Silverlight 5, Windows Phone 7, Windows Phone 7.1, Mono 2.6.4, Compact Framework 2.0 and Compact Framework 3.5
    HTML 5 (Javascript)

New Features:

    RPC (Remote Procedure Calls) working across platforms.
    Message Bus for publishing multiple services from one place.
    Authenticated Connection for verifying the client identity during connection.
    Threading Modes possibilities to control into which thread are routed received messages.
    Timeouts possibilities are improved.

Changes in behavior:

    One-way channels are discontinued - they can be fully replaced by duplex channels.



Version 5.1

Release Date: 2013-07-01

Supported Platforms:

    Java 6 and Android 2.1 (or later)
    .Net 3.5, .Net 4.0, .Net 4.5, Silverlight 3, Silverlight 4, Silverlight 5, Windows Phone 7, Windows Phone 7.1, Mono 2.6.4, Compact Framework 2.0 and Compact Framework 3.5

New Features:

    Communication via UDP suported.
    Support for IPv6 added.
    Backup Router - routing to a backup service if the service is not available.
    Automatic pinging to keep connection alive in websocket messaging for Android devices.

Changes in behavior:

    Performance significantly improved in many areas of the framework.
    Buffered monitored messaging improved detection of broken connection.
    Bridge component removed from the framework.
    Broker and Channel Wrapper-Unwrapper are not compatible with previous versions of the framework.

Fixed Bugs:

    0000020 - SyncDuplexTypedMessageSender may not work correctly.




Version 5.0

Release Date: 2013-02-10

Supported Platforms:

    Java 6 and Android 2.1 (or later)
    .Net 3.5, .Net 4.0, .Net 4.5, Silverlight 3, Silverlight 4, Silverlight 5, Windows Phone 7, Windows Phone 7.1, Mono 2.6.4, Compact Framework 2.0 and Compact Framework 3.5

New Features:

    .Net 4.5 supported
    Communication between applications via Android USB cable
    Digitally signed messages
    RSA encrypted messages (public and private key encryption)
    Synchronous request-response communication
    Possibility to send notification messages directly via IDuplexBroker interface
    Reliable messaging for Java and Android
    Load Balancer for Java and Android

Changes in behavior:
	
    Reliable messaging was reworked and simplified.
    Commands were removed from the framework and will not be supported anymore.
    Typed Sequenced Messages were removed from the framework and will not be supported anymore.

Fixed Bugs:

    No serious bugs detected.




Version 4.2

Release Date: 2012-10-01

Supported Platforms:

    Java 6 and Android 2.1 (or later)
    .Net 3.5, .Net 4.0, Silverlight 3, Silverlight 4, Silverlight 5, Windows Phone 7, Windows Phone 7.1, Mono 2.6.4, Compact Framework 2.0 and Compact Framework 3.5

New Features:

    Compact Framework 2.0 and 3.5 supported.
    Possibility for the service to obtain the IP address of the client that sent the message via TCP or WebSocket.
    Possibility to setup the concurrency mode for receiving messages via TCP and WebSockets.

Changes in behavior:

    No changes. Eneter 4.2 is compatible with Eneter 4.1 and Eneter 4.0

Cross-platform Notes:

    Binary serializer cannot be used for the communication between Java and .NET based applications.




Version 4.1

Release Date: 2012-07-01

Supported Platforms:

    Java 6 and Android 2.1 (or later)
    .Net 3.5, .Net 4.0, Silverlight 3, Silverlight 4, Silverlight 5, Windows Phone 7, Windows Phone 7.1 and Mono 2.6.4

New Features:

    Websocket communication for Java 6, Android, .Net 3.5, .Net 4.0, Silverlight 3, Silverlight 4, Silverlight 5, Windows Phone 7.1 and Mono 2.6.4
    JSON serialization for .Net 3.5, .Net 4.0

Changes in behavior:

    No changes. Eneter 4.1 is compatible with Eneter 4.0.




Version 4.0

Release Date: 2012-03-03

Supported Platforms:

    Java 6 and Android 2.1 (or later)
    .Net 3.5, .Net 4.0, Silverlight 3, Silverlight 4, Silverlight 5, Windows Phone 7, Windows Phone 7.1 and Mono 2.6.4

New Features:

    Cross-platform communication between .NET, Java and Android applications.
    Silverlight 5 and Windows Phone 7.1 supported
    Possibility to supply a custom encoder/formatter for the low-level communication between channels.

Changes in behavior:

    Formatting of messages was changed. Therefore, applications based on Eneter 4.0 cannot communicate with applications based on previous Eneter versions.
    The formatting was changed because the encoding information (i.e. Big or Little Endian, and UTF-8 or UTF-16) needs to be included in the message for the Cross-platform communication.
    However, the API is still the same. Therefore, to migrate to Eneter 4.0 just update references in your project and rebuild.

Fixed Bugs:

    0000013 - EneterTrace causes a security exception in Silverlight.



Version 3.0

Release Date: 2011-10-16

Supported Platforms:

    .Net 3.5, .Net 4.0, Silverlight 3, Silverlight 4, Windows Phone 7 and Mono 2.6.4

New Features:

    Interprocess communication via shared memory (faster than Named Pipes)
    Named Pipes based messaging supports security settings.
    GZip Serializer to compress long messages
    Clients can use regular expressions to subscribe for events from the broker
    Load Balancer for distributing the workload
    Significantly improved tracing

Changes in behavior:

    The Broker is not compatible with brokers from previous vesrions.
    The API is still the same, but the messages subscribing clients were modified in order to support regular expressions.

Fixed Bugs:

    0000012 - DataContractXmlStringSerializer in Silverlight is not compatible with DataContractXmlStringSerializer in desktop application.
    0000011 - DuplexBrokerClient incorectly detects if the duplex output channel is attached.
    0000009 - Uri address cannot end with '/' in case of named pipes.
    0000008 - Opening of HTTP connection sometimes hangs on Windows Phone 7.



Version 2.0

Release Date: 2011-03-20

Supported Platforms:

    .Net 3.5, .Net 4.0, Silverlight 3 and Silverlight 4
    new supported platforms Windows Phone 7 and Mono 2.6.4

New Features:

    Connection monitoring
    Buffering of sent messages in case of a disconnection
    Automatic reconnect in case of a disconnection
    Acknowledged communication (when the message is delivered the receiver sends the acknowledge message)
    TCP based messaging supports SSL
    HTTP policy server added for the communication between the Silverlight application and the HTTP server
    Encrypted serialization (AES and Rijndael encryption)
    Service can disconnect a certain client

Changes in behavior:

    If the serializer is not specified, then XmlStringSerializer is always used by default.
    The version 1.0 used BinarySerializer by default in .Net environment and XmlStringSerializer in Silverlight.
    If the duplex output channel is attached, it does not mean, the channel is listening to response messages.

Fixed Bugs:

    0000007 - Memory leak in Silverlight client when the Tcp connection is closed.
    0000006 - The application sending messages via Tcp is not closed properly if the.



Version 1.0

Release Date: 2010-07-04

Supported Platforms:

    .Net 3.5, .Net 4.0, Silverlight 3 and Silverlight 4

Features:

    Interprocess communication with strongly typed messages.
    Communication via TCP, HTTP and Named Pipes.
    Communication components Broker, Dispatcher and Router.
    Communication with strongly typed messages.
    TCP based messaging.
    TCP policy server for the communication between Silverlight and desktop applications.
    XML and Binary serializing.
